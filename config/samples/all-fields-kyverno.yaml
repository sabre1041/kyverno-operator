apiVersion: operator.kyverno.io/v1alpha1
kind: Kyverno
metadata:
  name: kyverno
spec:
  antiAffinity:
    enable: true
  config:
    excludeGroupRole: null
    excludeUsername: null
    existingConfig: ""
    generateSuccessEvents: false
    metricsConfig:
      namespaces:
        exclude: []
        include: []
    resourceFilters:
      - "[Event,*,*]"
      - "[*,kube-system,*]"
      - "[*,kube-public,*]"
      - "[*,kube-node-lease,*]"
      - "[Node,*,*]"
      - "[APIService,*,*]"
      - "[TokenReview,*,*]"
      - "[SubjectAccessReview,*,*]"
      - "[SelfSubjectAccessReview,*,*]"
      - "[Binding,*,*]"
      - "[ReplicaSet,*,*]"
      - "[ReportChangeRequest,*,*]"
      - "[ClusterReportChangeRequest,*,*]"
      - '[ClusterRole,*,{{ template "kyverno.fullname" . }}:*]'
      - '[ClusterRoleBinding,*,{{ template "kyverno.fullname" . }}:*]'
      - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceAccountName"
        . }}]'
      - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.configMapName"
        . }}]'
      - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.metricsConfigMapName"
        . }}]'
      - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
        . }}]'
      - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
      - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
        . }}]'
      - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
        . }}]'
      - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}:*]'
      - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
        . }}:*]'
      - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
        . }}.{{ template "kyverno.namespace" . }}.svc.*]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
        . }}]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
        . }}-metrics]'
      - '[ServiceMonitor,{{ if .Values.serviceMonitor.namespace }}{{ .Values.serviceMonitor.namespace
        }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.serviceName"
        . }}-service-monitor]'
      - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-test]'
    webhooks: null
  createSelfSignedCert: false
  customLabels: {}
  dnsPolicy: ClusterFirst
  envVars: {}
  envVarsInit: {}
  excludeKyvernoNamespace: true
  extraArgs:
    - --autogenInternals=false
  fullnameOverride: null
  generatecontrollerExtraResources: null
  hostNetwork: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    repository: ghcr.io/kyverno/kyverno
    tag: null
  imagePullSecrets: {}
  initImage:
    pullPolicy: null
    repository: ghcr.io/kyverno/kyvernopre
    tag: null
  initResources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  installCRDs: true
  livenessProbe:
    failureThreshold: 2
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 15
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 5
  metricsService:
    annotations: {}
    create: true
    nodePort: null
    port: 8000
    type: ClusterIP
  nameOverride: null
  namespace: null
  networkPolicy:
    enabled: false
    ingressFrom: []
  nodeAffinity: {}
  nodeSelector: {}
  podAffinity: {}
  podAnnotations: {}
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - kyverno
          topologyKey: kubernetes.io/hostname
        weight: 1
  podDisruptionBudget:
    maxUnavailable: null
    minAvailable: 1
  podLabels: {}
  podSecurityContext: {}
  priorityClassName: ""
  rbac:
    create: true
    serviceAccount:
      annotations: {}
      create: true
      name: null
  readinessProbe:
    failureThreshold: 6
    httpGet:
      path: /health/readiness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: null
  resources:
    limits:
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  service:
    annotations: {}
    nodePort: null
    port: 443
    type: ClusterIP
  serviceMonitor:
    additionalLabels: null
    enabled: false
    interval: 30s
    namespace: null
    scrapeTimeout: 25s
    secure: false
    tlsConfig: {}
  testImage:
    pullPolicy: null
    repository: null
    tag: null
  tolerations: []
  topologySpreadConstraints: []
  tufRootMountPath: /.sigstore
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  webhooksCleanup:
    enable: false
    image: bitnami/kubectl:latest
